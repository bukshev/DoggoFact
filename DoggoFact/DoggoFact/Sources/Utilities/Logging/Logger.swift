//
//  Logger.swift
//  DoggoFact
//
//  Created by –ò–≤–∞–Ω –ë—É–∫—à–µ–≤ on 15.11.2021.
//

import Foundation

/// –°—É—â–Ω–æ—Å—Ç—å, —á–µ—Ä–µ–∑ –∫–æ—Ç–æ—Ä—É—é –≤ –ø—Ä–æ–µ–∫—Ç–µ –º–æ–∂–Ω–æ –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å —Å–æ–±—ã—Ç–∏—è.
/// –ò—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –¥–ª—è –æ–±—â–µ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ –∏ –±–æ–ª–µ–µ –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞.
enum Log {
    /// –£—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è.
    private enum Level: String {
        case debug = "‚öôÔ∏è"
        case info = "‚úÖ"
        case warning = "‚ö†Ô∏è"
        case error = "‚õîÔ∏è"
    }

    /// –£—Ä–æ–≤–µ–Ω—å –¥–ª—è –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –ª–æ–≥-—Å–æ–æ–±—â–µ–Ω–∏—è.
    enum ProjectLayer {
        case coreNetwork
        case dataSource
        case gateway
        case domain
    }

    /// –ó–∞–ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ debug-—É—Ä–æ–≤–Ω—è.
    static func d(_ layer: ProjectLayer, _ message: String) {
        log(.debug, on: layer, message: message)
    }

    /// –ó–∞–ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ info-—É—Ä–æ–≤–Ω—è.
    static func i(_ layer: ProjectLayer, _ message: String) {
        log(.info, on: layer, message: message)
    }

    /// –ó–∞–ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ warning-—É—Ä–æ–≤–Ω—è.
    static func w(_ layer: ProjectLayer, _ message: String) {
        log(.warning, on: layer, message: message)
    }

    /// –ó–∞–ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ error-—É—Ä–æ–≤–Ω—è.
    static func e(_ layer: ProjectLayer, _ message: String) {
        log(.error, on: layer, message: message)
    }
}

extension Log {
    /// –ù–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω—ã–π –≤—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª—å.
    private static func log(_ level: Level, on layer: ProjectLayer, message: String) {
        print("\(layer.emoji) \(level.rawValue) \(layer.tag) : \(message)")
    }
}

/// –ò—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è.
private extension Log.ProjectLayer {

    var emoji: String {
        switch self {
        case .coreNetwork:
            return "üåê"
        case .dataSource:
            return "üì§"
        case .gateway:
            return "üö™"
        case .domain:
            return "üíº"
        }
    }

    var tag: String {
        switch self {
        case .coreNetwork:
            return "[NETWORK]"
        case .dataSource:
            return "[DATA_SOURCE]"
        case .gateway:
            return "[GATEWAY]"
        case .domain:
            return "[DOMAIN]"
        }
    }
}
